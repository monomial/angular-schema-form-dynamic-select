angular.module("schemaForm").run(["$templateCache",function(t){t.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div ng-init="mainScope=this.$parent.$parent;" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-controller="StrapSelectController"><button type="button" class="btn btn-default" ng-model="$$value$$" sf-changed="form" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" ng-options="item.value as (item.text == null ? item.name : item.text) for item in form.items | selectFilter:form:mainScope:this" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapmultiselectdynamic.html",'<div ng-init="mainScope=this.$parent.$parent;" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-controller="StrapSelectController" ng-init="fetchResult(form.options)"><button type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-multiple="1" data-html="1" ng-options="item.value as (item.text == null ? item.name : item.text) for item in form.items | selectFilter:form:mainScope:this" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselect.html",'<div ng-init="mainScope=this.$parent.$parent;" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-controller="StrapSelectController"><button type="button" class="btn btn-default" ng-model="$$value$$" sf-changed="form" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" ng-options="item.value as (item.text == null ? item.name : item.text) for item in form.items | selectFilter:form:mainScope:this" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselectdynamic.html",'<div ng-init="mainScope=this.$parent.$parent;" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-controller="StrapSelectController" ng-init="fetchResult(form.options)"><button type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" ng-options="item.value as (item.text == null ? item.name : item.text) for item in form.items | selectFilter:form:mainScope:this" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(t,e,r){var a=function(e,a,o){if("string"===a.type){var s=t.stdFormObj(e,a,o);return s.key=o.path,s.type="strapselect",o.lookup[r.stringify(o.path)]=s,s}};t.defaults.string.unshift(a);var o=function(e,a,o){if("array"===a.type){var s=t.stdFormObj(e,a,o);return s.key=o.path,s.type="strapmultiselect",o.lookup[r.stringify(o.path)]=s,s}};t.defaults.array.unshift(o);var s=function(e,a,o){if("string"===a.type){var s=t.stdFormObj(e,a,o);return s.key=o.path,s.type="strapselectdynamic",o.lookup[r.stringify(o.path)]=s,s}};t.defaults.string.unshift(s);var l=function(e,a,o){if("array"===a.type){var s=t.stdFormObj(e,a,o);return s.key=o.path,s.type="strapmultiselectdynamic",o.lookup[r.stringify(o.path)]=s,s}};t.defaults.array.unshift(l),e.addMapping("bootstrapDecorator","strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.createDirective("strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.addMapping("bootstrapDecorator","strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.createDirective("strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.addMapping("bootstrapDecorator","strapselectdynamic","directives/decorators/bootstrap/strap/strapselectdynamic.html"),e.createDirective("strapselectdynamic","directives/decorators/bootstrap/strap/strapselectdynamic.html"),e.addMapping("bootstrapDecorator","strapmultiselectdynamic","directives/decorators/bootstrap/strap/strapmultiselectdynamic.html"),e.createDirective("strapmultiselectdynamic","directives/decorators/bootstrap/strap/strapmultiselectdynamic.html")}]),angular.module("schemaForm").controller("StrapSelectController",["$scope","$http","$timeout",function(t,e){t.triggerItems=function(){console.log("listener triggered"),t.$$watchers.forEach(function(e){"form.items"==e.exp&&e.fn(t.form.items,t.form.items)})},t.initListeners=function(){t.form.options.filterTriggers&&t.form.options.filterTriggers.forEach(function(e){t.$parent.$parent.$watch(e,t.triggerItems)}),t.listenerInitialized=!0},t.remap=function(t,e){if(t&&"map"in t&&t.map){var r=[];return e.forEach(function(e){e.value=e[t.map.valueProperty],e.text=e[t.map.textProperty],r.push(e)}),r}return e},t.clone=function(e){if(null==e||"object"!=typeof e)return e;var r=e.constructor();for(var a in e)e.hasOwnProperty(a)&&(r[a]=t.clone(e[a]));return r},t.getCallback=function(e){if("string"==typeof e){var r=t.$parent.evalExpr(e);if("function"==typeof r)return r;throw"A callback string must match name of a function in the parent scope"}if("function"==typeof e)return e;throw"A callback must either be a string matching the name of a function in the parent scope or a direct function reference"},t.getOptions=function(e){return e.httpPost&&e.httpPost.optionsCallback?(newOptionInstance=t.clone(e),t.getCallback(e.httpPost.optionsCallback)(newOptionInstance)):e.httpGet&&e.httpGet.optionsCallback?(newOptionInstance=t.clone(e),t.getCallback(e.httpGet.optionsCallback)(newOptionInstance)):e},t.fetchResult=function(r){if(r)if(r.callback)t.form.items=t.getCallback(r.callback)(r),console.log("callback  items",t.form.items);else{if(r.asyncCallback)return t.getCallback(r.asyncCallback)(r).then(function(e){t.form.items=t.remap(r,e.data),console.log("asyncCallback items",t.form.items)},function(t,e){alert("Loading select items failed(Options: '"+String(r)+"\nError: "+e)});if(r.httpPost){var a=t.getOptions(r);return e.post(a.httpPost.url,a.httpPost.parameter).then(function(e){t.form.items=t.remap(a,e.data),console.log("httpPost items",t.form.items)},function(t,e){alert("Loading select items failed (URL: '"+String(a.httpPost.url)+"' Parameter: "+String(a.httpPost.parameter)+"\nError: "+e)})}if(r.httpGet){var a=t.getOptions(r);return e.get(a.httpGet.url,a.httpGet.parameter).then(function(e){t.form.items=t.remap(a,e.data),console.log("httpGet items",t.form.items)},function(t,e){alert("Loading select items failed (URL: '"+String(a.httpGet.url)+"\nError: "+e)})}}else console.log("StrapSelectController.fetchResult : No options set")}}]),angular.module("schemaForm").filter("selectFilter",[function(){return function(t,e,r,a){if(!angular.isDefined(t)||!angular.isDefined(e.options)||!angular.isDefined(e.options.filter)||""==e.options.filter)return t;var o=[];return angular.forEach(t,function(t){r.$eval(e.options.filter,{item:t})?o.push(t):a.$parent.ngModel.$modelValue&&a.$parent.ngModel.$modelValue.splice(a.$parent.ngModel.$modelValue.indexOf(t.value),1)}),console.log("Filter for "+e.title+" filter:"+e.options.filter+" input: "+JSON.stringify(t)+" output: "+JSON.stringify(o)),a.listenerInitialized||a.initListeners(r),o}}]);